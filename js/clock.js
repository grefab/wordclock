// Generated by CoffeeScript 1.3.3
(function() {

  this.Clock = (function() {
    var activate, arrayEqual, blank, createSelector, deactivate, digits, displayDots, displayHours, displayMinutes, displayTime, dots, getTime, lastTime, mainLoop;

    function Clock() {}

    Clock.start = function() {
      return mainLoop();
    };

    mainLoop = function() {
      displayTime();
      return setTimeout(mainLoop, 500);
    };

    getTime = function() {
      var d, dots, hours, minutes;
      d = new Date();
      hours = d.getHours();
      hours = hours > 12 ? hours - 12 : hours;
      hours = hours === 0 ? 12 : hours;
      minutes = d.getMinutes();
      dots = minutes % 5;
      return [hours, minutes, dots];
    };

    displayHours = function(hours, minutes) {
      var d_hours;
      d_hours = minutes < 25 ? hours : hours + 1;
      d_hours = d_hours === 13 ? 1 : d_hours;
      switch (d_hours) {
        case 1:
          if (minutes < 5) {
            return activate(digits.h_ein);
          } else {
            return activate(digits.h_eins);
          }
          break;
        case 2:
          return activate(digits.h_zwei);
        case 3:
          return activate(digits.h_drei);
        case 4:
          return activate(digits.h_vier);
        case 5:
          return activate(digits.h_fuenf);
        case 6:
          return activate(digits.h_sechs);
        case 7:
          return activate(digits.h_sieben);
        case 8:
          return activate(digits.h_acht);
        case 9:
          return activate(digits.h_neun);
        case 10:
          return activate(digits.h_zehn);
        case 11:
          return activate(digits.h_elf);
        case 12:
          return activate(digits.h_zwoelf);
      }
    };

    displayMinutes = function(minutes) {
      var fives;
      fives = Math.floor(minutes / 5);
      switch (fives) {
        case 0:
          return activate(digits.uhr);
        case 1:
          activate(digits.m_fuenf);
          return activate(digits.nach);
        case 2:
          activate(digits.m_zehn);
          return activate(digits.nach);
        case 3:
          activate(digits.m_viertel);
          return activate(digits.nach);
        case 4:
          activate(digits.m_zwanzig);
          return activate(digits.nach);
        case 5:
          activate(digits.m_fuenf);
          activate(digits.vor);
          return activate(digits.halb);
        case 6:
          return activate(digits.halb);
        case 7:
          activate(digits.m_fuenf);
          activate(digits.nach);
          return activate(digits.halb);
        case 8:
          activate(digits.m_zwanzig);
          return activate(digits.vor);
        case 9:
          activate(digits.m_viertel);
          return activate(digits.vor);
        case 10:
          activate(digits.m_zehn);
          return activate(digits.vor);
        case 11:
          activate(digits.m_fuenf);
          return activate(digits.vor);
      }
    };

    displayDots = function(displayDots) {
      if (displayDots > 0) {
        activate(dots.one);
      } else {
        deactivate(dots.one);
      }
      if (displayDots > 1) {
        activate(dots.two);
      } else {
        deactivate(dots.two);
      }
      if (displayDots > 2) {
        activate(dots.three);
      } else {
        deactivate(dots.three);
      }
      if (displayDots > 3) {
        return activate(dots.four);
      } else {
        return deactivate(dots.four);
      }
    };

    lastTime = [-1, -1, -1];

    arrayEqual = function(a, b) {
      return a.length === b.length && a.every(function(elem, i) {
        return elem === b[i];
      });
    };

    displayTime = function() {
      var currentTime;
      currentTime = getTime();
      if (!arrayEqual(lastTime, currentTime)) {
        lastTime = currentTime;
        blank();
        return setTimeout(function() {
          var dots, hours, minutes;
          activate(digits.es);
          activate(digits.ist);
          hours = currentTime[0], minutes = currentTime[1], dots = currentTime[2];
          displayHours(hours, minutes);
          displayMinutes(minutes);
          return displayDots(dots);
        }, 100);
      }
    };

    blank = function() {
      return $(".clock .grid td").removeClass("active");
    };

    activate = function(selector) {
      return $(selector).addClass("active");
    };

    deactivate = function(selector) {
      return $(selector).removeClass("active");
    };

    createSelector = function(coordinates) {
      var c, s, _i, _len;
      s = "";
      for (_i = 0, _len = coordinates.length; _i < _len; _i++) {
        c = coordinates[_i];
        s += ".clock .grid tr:nth-child(" + c[1] + ") td:nth-child(" + c[0] + "), ";
      }
      return s.substr(0, s.length - 2);
    };

    digits = {
      es: createSelector([[1, 1], [2, 1]]),
      ist: createSelector([[4, 1], [5, 1], [6, 1]]),
      m_fuenf: createSelector([[8, 1], [9, 1], [10, 1], [11, 1]]),
      m_zehn: createSelector([[1, 2], [2, 2], [3, 2], [4, 2]]),
      m_fuenfzehn: createSelector([[8, 1], [9, 1], [10, 1], [11, 1], [1, 2], [2, 2], [3, 2], [4, 2]]),
      m_zwanzig: createSelector([[5, 2], [6, 2], [7, 2], [8, 2], [9, 2], [10, 2], [11, 2]]),
      m_dreiviertel: createSelector([[1, 3], [2, 3], [3, 3], [4, 3], [5, 3], [6, 3], [7, 3], [8, 3], [9, 3], [10, 3], [11, 3]]),
      m_viertel: createSelector([[5, 3], [6, 3], [7, 3], [8, 3], [9, 3], [10, 3], [11, 3]]),
      nach: createSelector([[3, 4], [4, 4], [5, 4], [6, 4]]),
      vor: createSelector([[7, 4], [8, 4], [9, 4]]),
      halb: createSelector([[1, 5], [2, 5], [3, 5], [4, 5]]),
      h_zwoelf: createSelector([[6, 5], [7, 5], [8, 5], [9, 5], [10, 5]]),
      h_zwei: createSelector([[1, 6], [2, 6], [3, 6], [4, 6]]),
      h_ein: createSelector([[3, 6], [4, 6], [5, 6]]),
      h_eins: createSelector([[3, 6], [4, 6], [5, 6], [6, 6]]),
      h_sieben: createSelector([[6, 6], [7, 6], [8, 6], [9, 6], [10, 6], [11, 6]]),
      h_drei: createSelector([[2, 7], [3, 7], [4, 7], [5, 7]]),
      h_fuenf: createSelector([[8, 7], [9, 7], [10, 7], [11, 7]]),
      h_elf: createSelector([[1, 8], [2, 8], [3, 8]]),
      h_neun: createSelector([[4, 8], [5, 8], [6, 8], [7, 8]]),
      h_vier: createSelector([[8, 8], [9, 8], [10, 8], [11, 8]]),
      h_acht: createSelector([[2, 9], [3, 9], [4, 9], [5, 9]]),
      h_zehn: createSelector([[6, 9], [7, 9], [8, 9], [9, 9]]),
      h_sechs: createSelector([[2, 10], [3, 10], [4, 10], [5, 10], [6, 10]]),
      uhr: createSelector([[9, 10], [10, 10], [11, 10]])
    };

    dots = {
      one: ".clock .dots.one",
      two: ".clock .dots.two",
      three: ".clock .dots.three",
      four: ".clock .dots.four"
    };

    return Clock;

  })();

}).call(this);
